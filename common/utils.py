import os
from io import BytesIO
from langchain.embeddings import SentenceTransformerEmbeddings
from indexing.loader import LocalLoader, UploadedFileLoader
from indexing.chunker import generate_chunks


def generate_document(file_path: str, generate_vector = False, embedding = SentenceTransformerEmbeddings(model_name="all-mpnet-base-v2")):
    """This function recieves a file_path and process the files to generate a Document object.
    This document object has: content, chunks of its content, file_path, file_name and vectors.
    If the argument generate_vector = True, the vectors will be generated by the embedding."""
    #Load the file and assig to a variable document
    document = LocalLoader(file_path).load()
    if not document.content:
        raise ValueError(f"El contenido del archivo {file_path} está vacío.")
            
    document.chunks = generate_chunks(document.content)
    # Verifica los chunks generados
    if not document.chunks:
        raise ValueError(f"No se generaron chunks para el archivo {file_path}.")
            
    # GENERATE THE VECTOR
    if generate_vector is True:
        for chunk in document.chunks:
            embed = embedding.embed_documents(texts=chunk)
            document.vectors.append(embed)

    return document



def generate_document_from_uploaded_file(file: str, generate_vector = False, embedding = SentenceTransformerEmbeddings(model_name="all-mpnet-base-v2")):
    """This function recieves an uploaded file and process the files to generate a Document object.
    This document object has: content, chunks of its content, file_path, file_name and vectors.
    If the argument generate_vector = True, the vectors will be generated by the embedding."""
    # Load the file from the UploadedFile object
    document = UploadedFileLoader(file).load()
    if not document.content:
        raise ValueError(f"El contenido del archivo {file} está vacío.")
            
    document.chunks = generate_chunks(document.content)
    # Verifica los chunks generados
    if not document.chunks:
        raise ValueError(f"No se generaron chunks para el archivo {file}.")
            
    # GENERATE THE VECTOR
    if generate_vector is True:
        for chunk in document.chunks:
            embed = embedding.embed_documents(texts=chunk)
            document.vectors.append(embed)

    return document